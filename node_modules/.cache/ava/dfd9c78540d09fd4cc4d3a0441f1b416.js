'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

const test = require('ava');
const proxyquire = require('proxyquire');
const sinon = require('sinon');
const agentFixtures = require('./fixtures/fx_agent');

let db = null;
let id = 1;
let uuid = 'yyy-yyy-yyy';

let config = {
  logging: function () {}
};

let AgentStub = null;

let MetricStub = {
  belongsTo: sinon.spy()
};

let sandbox = null;
let single = Object.assign({}, agentFixtures.single);

let uuidArgs = {
  where: {
    uuid
  }
};

let connectedArgs = {
  where: {
    connected: true
  }
};

let usernameArgs = {
  where: {
    username: 'platzi',
    connected: true
  }
};

let newAgentArgs = {
  uuid: '123-123-123',
  name: 'test',
  username: 'test',
  hostname: 'test',
  pid: 0,
  connected: false
};

test.beforeEach(async () => {
  sandbox = sinon.sandbox.create();

  AgentStub = {
    hasMany: sandbox.spy()

    // Modelo create Stub
  };AgentStub.create = sandbox.stub();
  AgentStub.create.withArgs(newAgentArgs).returns(Promise.resolve({ toJSON() {
      return newAgentArgs;
    } }));

  // Modelo update Stub
  AgentStub.update = sandbox.stub();
  AgentStub.update.withArgs(single, uuidArgs).returns(Promise.resolve(agentFixtures.single));

  // Modelo findOne Stub
  AgentStub.findOne = sandbox.stub();
  AgentStub.findOne.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.findByUuid(uuid)));

  // Modelo findById Stub
  AgentStub.findById = sandbox.stub();
  AgentStub.findById.withArgs(id).returns(Promise.resolve(agentFixtures.findById(id)));

  // Modelo findByUuid Stub
  AgentStub.findByUuid = sandbox.stub();
  AgentStub.findByUuid.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.findByUuid(uuid)));

  // Modelo findAll Stub
  AgentStub.findAll = sandbox.stub();
  AgentStub.findAll.withArgs().returns(Promise.resolve(agentFixtures.all));
  AgentStub.findAll.withArgs(connectedArgs).returns(Promise.resolve(agentFixtures.connected));
  AgentStub.findAll.withArgs(usernameArgs).returns(Promise.resolve(agentFixtures.platzi));

  const setupDatabase = proxyquire('../index.js', {
    './models/agent': () => AgentStub,
    './models/metric': () => MetricStub
  });
  db = await setupDatabase(config);
});

test.afterEach(() => {
  sandbox && sinon.sandbox.restore();
});

test('Agent', t => {
  var _rec = new _powerAssertRecorder();

  t.truthy(_rec._expr(_rec._capt(_rec._capt(db, 'arguments/0/object').Agent, 'arguments/0'), {
    content: 't.truthy(db.Agent, \'Servicio Agente Existe\')',
    filepath: 'tests/agent-tests.js',
    line: 99,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"truthy","range":[2,8]},"computed":false,"range":[0,8]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"db","range":[9,11]},"property":{"type":"Identifier","name":"Agent","range":[12,17]},"computed":false,"range":[9,17]},{"type":"StringLiteral","value":"Servicio Agente Existe","range":[19,43]}],"range":[0,44]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"truthy","range":[2,8]},{"type":{"label":"("},"range":[8,9]},{"type":{"label":"name"},"value":"db","range":[9,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"Agent","range":[12,17]},{"type":{"label":","},"range":[17,18]},{"type":{"label":"string"},"value":"Servicio Agente Existe","range":[19,43]},{"type":{"label":")"},"range":[43,44]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Servicio Agente Existe');
});

test.serial('Setup', t => {
  var _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder();

  t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(AgentStub, 'arguments/0/object/object').hasMany, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.hasMany.called, \'AgentModel.hasMany fu\xE9 ejecutada\')',
    filepath: 'tests/agent-tests.js',
    line: 103,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"hasMany","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"AgentModel.hasMany fu\xE9 ejecutada","range":[33,67]}],"range":[0,68]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"hasMany","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"AgentModel.hasMany fu\xE9 ejecutada","range":[33,67]},{"type":{"label":")"},"range":[67,68]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'AgentModel.hasMany fué ejecutada');
  t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(AgentStub, 'arguments/0/callee/object/object').hasMany, 'arguments/0/callee/object').calledWith(_rec3._capt(MetricStub, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(AgentStub.hasMany.calledWith(MetricStub), \'Argumento MetricModel bien recibido\')',
    filepath: 'tests/agent-tests.js',
    line: 104,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"hasMany","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[{"type":"Identifier","name":"MetricStub","range":[36,46]}],"range":[7,47]},{"type":"StringLiteral","value":"Argumento MetricModel bien recibido","range":[49,86]}],"range":[0,87]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"hasMany","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":"name"},"value":"MetricStub","range":[36,46]},{"type":{"label":")"},"range":[46,47]},{"type":{"label":","},"range":[47,48]},{"type":{"label":"string"},"value":"Argumento MetricModel bien recibido","range":[49,86]},{"type":{"label":")"},"range":[86,87]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Argumento MetricModel bien recibido');
  t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(MetricStub, 'arguments/0/object/object').belongsTo, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(MetricStub.belongsTo.called, \'MetricModel.belongTo fu\xE9 ejecutado\')',
    filepath: 'tests/agent-tests.js',
    line: 105,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"belongsTo","range":[18,27]},"computed":false,"range":[7,27]},"property":{"type":"Identifier","name":"called","range":[28,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"MetricModel.belongTo fu\xE9 ejecutado","range":[36,72]}],"range":[0,73]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"belongsTo","range":[18,27]},{"type":{"label":"."},"range":[27,28]},{"type":{"label":"name"},"value":"called","range":[28,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"MetricModel.belongTo fu\xE9 ejecutado","range":[36,72]},{"type":{"label":")"},"range":[72,73]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'MetricModel.belongTo fué ejecutado');
  t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(MetricStub, 'arguments/0/callee/object/object').belongsTo, 'arguments/0/callee/object').calledWith(_rec5._capt(AgentStub, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(MetricStub.belongsTo.calledWith(AgentStub), \'Argumento AgentModel bien recibido\')',
    filepath: 'tests/agent-tests.js',
    line: 106,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"belongsTo","range":[18,27]},"computed":false,"range":[7,27]},"property":{"type":"Identifier","name":"calledWith","range":[28,38]},"computed":false,"range":[7,38]},"arguments":[{"type":"Identifier","name":"AgentStub","range":[39,48]}],"range":[7,49]},{"type":"StringLiteral","value":"Argumento AgentModel bien recibido","range":[51,87]}],"range":[0,88]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"belongsTo","range":[18,27]},{"type":{"label":"."},"range":[27,28]},{"type":{"label":"name"},"value":"calledWith","range":[28,38]},{"type":{"label":"("},"range":[38,39]},{"type":{"label":"name"},"value":"AgentStub","range":[39,48]},{"type":{"label":")"},"range":[48,49]},{"type":{"label":","},"range":[49,50]},{"type":{"label":"string"},"value":"Argumento AgentModel bien recibido","range":[51,87]},{"type":{"label":")"},"range":[87,88]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Argumento AgentModel bien recibido');
});

test.serial('Agent#findById', async t => {
  var _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder();

  let agent = await db.Agent.findById(id);
  t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(AgentStub, 'arguments/0/object/object').findById, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.findById.called, \'Funcion findById esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 111,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findById","range":[17,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"called","range":[26,32]},"computed":false,"range":[7,32]},{"type":"StringLiteral","value":"Funcion findById esta siendo llamada","range":[34,72]}],"range":[0,73]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findById","range":[17,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"called","range":[26,32]},{"type":{"label":","},"range":[32,33]},{"type":{"label":"string"},"value":"Funcion findById esta siendo llamada","range":[34,72]},{"type":{"label":")"},"range":[72,73]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findById esta siendo llamada');
  t.true(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(AgentStub, 'arguments/0/object/object').findById, 'arguments/0/object').calledOnce, 'arguments/0'), {
    content: 't.true(AgentStub.findById.calledOnce, \'Funcion findById esta siendo llamada una sola vez\')',
    filepath: 'tests/agent-tests.js',
    line: 112,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findById","range":[17,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"calledOnce","range":[26,36]},"computed":false,"range":[7,36]},{"type":"StringLiteral","value":"Funcion findById esta siendo llamada una sola vez","range":[38,89]}],"range":[0,90]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findById","range":[17,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"calledOnce","range":[26,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"Funcion findById esta siendo llamada una sola vez","range":[38,89]},{"type":{"label":")"},"range":[89,90]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findById esta siendo llamada una sola vez');
  t.true(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(AgentStub, 'arguments/0/callee/object/object').findById, 'arguments/0/callee/object').calledWith(_rec8._capt(id, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(AgentStub.findById.calledWith(id), \'Funcion findById esta siendo llamada con un id de argumento\')',
    filepath: 'tests/agent-tests.js',
    line: 113,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findById","range":[17,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"calledWith","range":[26,36]},"computed":false,"range":[7,36]},"arguments":[{"type":"Identifier","name":"id","range":[37,39]}],"range":[7,40]},{"type":"StringLiteral","value":"Funcion findById esta siendo llamada con un id de argumento","range":[42,103]}],"range":[0,104]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findById","range":[17,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"calledWith","range":[26,36]},{"type":{"label":"("},"range":[36,37]},{"type":{"label":"name"},"value":"id","range":[37,39]},{"type":{"label":")"},"range":[39,40]},{"type":{"label":","},"range":[40,41]},{"type":{"label":"string"},"value":"Funcion findById esta siendo llamada con un id de argumento","range":[42,103]},{"type":{"label":")"},"range":[103,104]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findById esta siendo llamada con un id de argumento');

  t.deepEqual(agent, agentFixtures.findById(id), 'Todo Perfecto');
});

test.serial('Agent#createOrUpdate - Exist', async t => {
  var _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder();

  let agent = await db.Agent.createOrUpdate(single);

  t.true(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(AgentStub, 'arguments/0/object/object').findOne, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.findOne.called, \'Funcion findOne esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 121,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"Funcion findOne esta siendo llamada","range":[33,70]}],"range":[0,71]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"Funcion findOne esta siendo llamada","range":[33,70]},{"type":{"label":")"},"range":[70,71]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findOne esta siendo llamada');
  t.true(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(AgentStub, 'arguments/0/object/object').findOne, 'arguments/0/object').calledTwice, 'arguments/0'), {
    content: 't.true(AgentStub.findOne.calledTwice, \'Funcion findOne esta siento llamada dos veces\')',
    filepath: 'tests/agent-tests.js',
    line: 122,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledTwice","range":[25,36]},"computed":false,"range":[7,36]},{"type":"StringLiteral","value":"Funcion findOne esta siento llamada dos veces","range":[38,85]}],"range":[0,86]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledTwice","range":[25,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"Funcion findOne esta siento llamada dos veces","range":[38,85]},{"type":{"label":")"},"range":[85,86]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findOne esta siento llamada dos veces');
  t.true(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(AgentStub, 'arguments/0/object/object').update, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.update.called, \'Funcion update esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 123,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"update","range":[17,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"Funcion update esta siendo llamada","range":[32,68]}],"range":[0,69]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"update","range":[17,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"Funcion update esta siendo llamada","range":[32,68]},{"type":{"label":")"},"range":[68,69]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion update esta siendo llamada');
  t.true(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(AgentStub, 'arguments/0/object/object').update, 'arguments/0/object').calledOnce, 'arguments/0'), {
    content: 't.true(AgentStub.update.calledOnce, \'Funcion update esta siento llamada una vez\')',
    filepath: 'tests/agent-tests.js',
    line: 124,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"update","range":[17,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"Funcion update esta siento llamada una vez","range":[36,80]}],"range":[0,81]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"update","range":[17,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"Funcion update esta siento llamada una vez","range":[36,80]},{"type":{"label":")"},"range":[80,81]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion update esta siento llamada una vez');

  t.deepEqual(agent, single, 'El agente creado es perfectamente igual al que le envié');
});

test.serial('Agent#createOrUpdate - New', async t => {
  var _rec13 = new _powerAssertRecorder(),
      _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder(),
      _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder();

  let agent = await db.Agent.createOrUpdate(newAgentArgs);

  t.true(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(AgentStub, 'arguments/0/object/object').findOne, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.findOne.called, \'Funcion findOne esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 132,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"Funcion findOne esta siendo llamada","range":[33,70]}],"range":[0,71]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"Funcion findOne esta siendo llamada","range":[33,70]},{"type":{"label":")"},"range":[70,71]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findOne esta siendo llamada');
  t.true(_rec14._expr(_rec14._capt(_rec14._capt(_rec14._capt(AgentStub, 'arguments/0/object/object').findOne, 'arguments/0/object').calledOnce, 'arguments/0'), {
    content: 't.true(AgentStub.findOne.calledOnce, \'Funcion findOne esta siendo llamada una sola vez\')',
    filepath: 'tests/agent-tests.js',
    line: 133,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledOnce","range":[25,35]},"computed":false,"range":[7,35]},{"type":"StringLiteral","value":"Funcion findOne esta siendo llamada una sola vez","range":[37,87]}],"range":[0,88]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledOnce","range":[25,35]},{"type":{"label":","},"range":[35,36]},{"type":{"label":"string"},"value":"Funcion findOne esta siendo llamada una sola vez","range":[37,87]},{"type":{"label":")"},"range":[87,88]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findOne esta siendo llamada una sola vez');
  t.true(_rec15._expr(_rec15._capt(_rec15._capt(_rec15._capt(AgentStub, 'arguments/0/callee/object/object').findOne, 'arguments/0/callee/object').calledWith(_rec15._capt({ where: _rec15._capt({ uuid: _rec15._capt(_rec15._capt(newAgentArgs, 'arguments/0/arguments/0/properties/0/value/properties/0/value/object').uuid, 'arguments/0/arguments/0/properties/0/value/properties/0/value') }, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(AgentStub.findOne.calledWith({ where: { uuid: newAgentArgs.uuid } }), \'Funcion findOne esta siendo llamada con los argumentos de newAgentArgs\')',
    filepath: 'tests/agent-tests.js',
    line: 134,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"where","range":[38,43]},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"uuid","range":[47,51]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"newAgentArgs","range":[53,65]},"property":{"type":"Identifier","name":"uuid","range":[66,70]},"computed":false,"range":[53,70]},"computed":false,"shorthand":false,"range":[47,70]}],"range":[45,72]},"computed":false,"shorthand":false,"range":[38,72]}],"range":[36,74]}],"range":[7,75]},{"type":"StringLiteral","value":"Funcion findOne esta siendo llamada con los argumentos de newAgentArgs","range":[77,149]}],"range":[0,150]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":"{"},"range":[36,37]},{"type":{"label":"name"},"value":"where","range":[38,43]},{"type":{"label":":"},"range":[43,44]},{"type":{"label":"{"},"range":[45,46]},{"type":{"label":"name"},"value":"uuid","range":[47,51]},{"type":{"label":":"},"range":[51,52]},{"type":{"label":"name"},"value":"newAgentArgs","range":[53,65]},{"type":{"label":"."},"range":[65,66]},{"type":{"label":"name"},"value":"uuid","range":[66,70]},{"type":{"label":"}"},"range":[71,72]},{"type":{"label":"}"},"range":[73,74]},{"type":{"label":")"},"range":[74,75]},{"type":{"label":","},"range":[75,76]},{"type":{"label":"string"},"value":"Funcion findOne esta siendo llamada con los argumentos de newAgentArgs","range":[77,149]},{"type":{"label":")"},"range":[149,150]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findOne esta siendo llamada con los argumentos de newAgentArgs');
  t.true(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(AgentStub, 'arguments/0/object/object').create, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.create.called, \'Funcion create esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 135,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"create","range":[17,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"called","range":[24,30]},"computed":false,"range":[7,30]},{"type":"StringLiteral","value":"Funcion create esta siendo llamada","range":[32,68]}],"range":[0,69]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"create","range":[17,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"called","range":[24,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"Funcion create esta siendo llamada","range":[32,68]},{"type":{"label":")"},"range":[68,69]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion create esta siendo llamada');
  t.true(_rec17._expr(_rec17._capt(_rec17._capt(_rec17._capt(AgentStub, 'arguments/0/object/object').create, 'arguments/0/object').calledOnce, 'arguments/0'), {
    content: 't.true(AgentStub.create.calledOnce, \'Funcion create esta siendo llamada una sola vez\')',
    filepath: 'tests/agent-tests.js',
    line: 136,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"create","range":[17,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledOnce","range":[24,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"Funcion create esta siendo llamada una sola vez","range":[36,85]}],"range":[0,86]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"create","range":[17,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledOnce","range":[24,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"Funcion create esta siendo llamada una sola vez","range":[36,85]},{"type":{"label":")"},"range":[85,86]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion create esta siendo llamada una sola vez');
  t.true(_rec18._expr(_rec18._capt(_rec18._capt(_rec18._capt(AgentStub, 'arguments/0/callee/object/object').create, 'arguments/0/callee/object').calledWith(_rec18._capt(newAgentArgs, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(AgentStub.create.calledWith(newAgentArgs), \'Funcion create esta siendo llamada con los argumentos de newAgentArgs\')',
    filepath: 'tests/agent-tests.js',
    line: 137,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"create","range":[17,23]},"computed":false,"range":[7,23]},"property":{"type":"Identifier","name":"calledWith","range":[24,34]},"computed":false,"range":[7,34]},"arguments":[{"type":"Identifier","name":"newAgentArgs","range":[35,47]}],"range":[7,48]},{"type":"StringLiteral","value":"Funcion create esta siendo llamada con los argumentos de newAgentArgs","range":[50,121]}],"range":[0,122]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"create","range":[17,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"calledWith","range":[24,34]},{"type":{"label":"("},"range":[34,35]},{"type":{"label":"name"},"value":"newAgentArgs","range":[35,47]},{"type":{"label":")"},"range":[47,48]},{"type":{"label":","},"range":[48,49]},{"type":{"label":"string"},"value":"Funcion create esta siendo llamada con los argumentos de newAgentArgs","range":[50,121]},{"type":{"label":")"},"range":[121,122]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion create esta siendo llamada con los argumentos de newAgentArgs');

  t.deepEqual(agent, newAgentArgs, 'El agente creado es perfectamente igual al que le envié');
});

test.serial('Agent#findAll', async t => {
  var _rec19 = new _powerAssertRecorder(),
      _rec20 = new _powerAssertRecorder(),
      _rec21 = new _powerAssertRecorder();

  let agents = await db.Agent.findAll();

  t.true(_rec19._expr(_rec19._capt(_rec19._capt(_rec19._capt(AgentStub, 'arguments/0/object/object').findAll, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.findAll.called, \'Funcion findAll esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 145,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findAll","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"Funcion findAll esta siendo llamada","range":[33,70]}],"range":[0,71]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findAll","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"Funcion findAll esta siendo llamada","range":[33,70]},{"type":{"label":")"},"range":[70,71]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findAll esta siendo llamada');
  t.true(_rec20._expr(_rec20._capt(_rec20._capt(_rec20._capt(AgentStub, 'arguments/0/object/object').findAll, 'arguments/0/object').calledOnce, 'arguments/0'), {
    content: 't.true(AgentStub.findAll.calledOnce, \'Funcion findAll esta siendo llamada una sola vez\')',
    filepath: 'tests/agent-tests.js',
    line: 146,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findAll","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledOnce","range":[25,35]},"computed":false,"range":[7,35]},{"type":"StringLiteral","value":"Funcion findAll esta siendo llamada una sola vez","range":[37,87]}],"range":[0,88]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findAll","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledOnce","range":[25,35]},{"type":{"label":","},"range":[35,36]},{"type":{"label":"string"},"value":"Funcion findAll esta siendo llamada una sola vez","range":[37,87]},{"type":{"label":")"},"range":[87,88]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findAll esta siendo llamada una sola vez');
  t.true(_rec21._expr(_rec21._capt(_rec21._capt(_rec21._capt(AgentStub, 'arguments/0/callee/object/object').findAll, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.true(AgentStub.findAll.calledWith(), \'Funcion findAll esta siendo llamada con los argumentos de newAgentArgs\')',
    filepath: 'tests/agent-tests.js',
    line: 147,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findAll","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[],"range":[7,37]},{"type":"StringLiteral","value":"Funcion findAll esta siendo llamada con los argumentos de newAgentArgs","range":[39,111]}],"range":[0,112]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findAll","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":")"},"range":[36,37]},{"type":{"label":","},"range":[37,38]},{"type":{"label":"string"},"value":"Funcion findAll esta siendo llamada con los argumentos de newAgentArgs","range":[39,111]},{"type":{"label":")"},"range":[111,112]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findAll esta siendo llamada con los argumentos de newAgentArgs');

  t.is(agents.length, agentFixtures.all.length, 'El tamaño de las respuestas son identicos');
  t.deepEqual(agents, agentFixtures.all, 'La respuesta es identica a la esperada');
});

test.serial('Agent#username', async t => {
  var _rec22 = new _powerAssertRecorder(),
      _rec23 = new _powerAssertRecorder(),
      _rec24 = new _powerAssertRecorder();

  let agents = await db.Agent.findByUsername(usernameArgs);

  t.true(_rec22._expr(_rec22._capt(_rec22._capt(_rec22._capt(AgentStub, 'arguments/0/object/object').findByUsername, 'arguments/0/object').called, 'arguments/0'), {
    content: 't.true(AgentStub.findByUsername.called, \'Funcion findByUsername esta siendo llamada\')',
    filepath: 'tests/agent-tests.js',
    line: 156,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findByUsername","range":[17,31]},"computed":false,"range":[7,31]},"property":{"type":"Identifier","name":"called","range":[32,38]},"computed":false,"range":[7,38]},{"type":"StringLiteral","value":"Funcion findByUsername esta siendo llamada","range":[40,84]}],"range":[0,85]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findByUsername","range":[17,31]},{"type":{"label":"."},"range":[31,32]},{"type":{"label":"name"},"value":"called","range":[32,38]},{"type":{"label":","},"range":[38,39]},{"type":{"label":"string"},"value":"Funcion findByUsername esta siendo llamada","range":[40,84]},{"type":{"label":")"},"range":[84,85]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findByUsername esta siendo llamada');
  t.true(_rec23._expr(_rec23._capt(_rec23._capt(_rec23._capt(AgentStub, 'arguments/0/object/object').findByUsername, 'arguments/0/object').calledOnce, 'arguments/0'), {
    content: 't.true(AgentStub.findByUsername.calledOnce, \'Funcion findByUsername esta siendo llamada una sola vez\')',
    filepath: 'tests/agent-tests.js',
    line: 157,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findByUsername","range":[17,31]},"computed":false,"range":[7,31]},"property":{"type":"Identifier","name":"calledOnce","range":[32,42]},"computed":false,"range":[7,42]},{"type":"StringLiteral","value":"Funcion findByUsername esta siendo llamada una sola vez","range":[44,101]}],"range":[0,102]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findByUsername","range":[17,31]},{"type":{"label":"."},"range":[31,32]},{"type":{"label":"name"},"value":"calledOnce","range":[32,42]},{"type":{"label":","},"range":[42,43]},{"type":{"label":"string"},"value":"Funcion findByUsername esta siendo llamada una sola vez","range":[44,101]},{"type":{"label":")"},"range":[101,102]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findByUsername esta siendo llamada una sola vez');
  t.true(_rec24._expr(_rec24._capt(_rec24._capt(_rec24._capt(AgentStub, 'arguments/0/callee/object/object').findByUsername, 'arguments/0/callee/object').calledWith(_rec24._capt({
    where: _rec24._capt({
      username,
      connected: true
    }, 'arguments/0/arguments/0/properties/0/value')
  }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(AgentStub.findByUsername.calledWith({ where: { username, connected: true } }), \'Funcion findByUsername esta siendo llamada con los argumentos de usernameArgs\')',
    filepath: 'tests/agent-tests.js',
    line: 158,
    async: true,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findByUsername","range":[17,31]},"computed":false,"range":[7,31]},"property":{"type":"Identifier","name":"calledWith","range":[32,42]},"computed":false,"range":[7,42]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"where","range":[45,50]},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"username","range":[54,62]},"value":{"type":"Identifier","name":"username","range":[54,62]},"computed":false,"shorthand":true,"range":[54,62]},{"type":"ObjectProperty","key":{"type":"Identifier","name":"connected","range":[64,73]},"value":{"type":"BooleanLiteral","value":true,"range":[75,79]},"computed":false,"shorthand":false,"range":[64,79]}],"range":[52,81]},"computed":false,"shorthand":false,"range":[45,81]}],"range":[43,83]}],"range":[7,84]},{"type":"StringLiteral","value":"Funcion findByUsername esta siendo llamada con los argumentos de usernameArgs","range":[86,165]}],"range":[0,166]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findByUsername","range":[17,31]},{"type":{"label":"."},"range":[31,32]},{"type":{"label":"name"},"value":"calledWith","range":[32,42]},{"type":{"label":"("},"range":[42,43]},{"type":{"label":"{"},"range":[43,44]},{"type":{"label":"name"},"value":"where","range":[45,50]},{"type":{"label":":"},"range":[50,51]},{"type":{"label":"{"},"range":[52,53]},{"type":{"label":"name"},"value":"username","range":[54,62]},{"type":{"label":","},"range":[62,63]},{"type":{"label":"name"},"value":"connected","range":[64,73]},{"type":{"label":":"},"range":[73,74]},{"type":{"label":"true"},"value":"true","range":[75,79]},{"type":{"label":"}"},"range":[80,81]},{"type":{"label":"}"},"range":[82,83]},{"type":{"label":")"},"range":[83,84]},{"type":{"label":","},"range":[84,85]},{"type":{"label":"string"},"value":"Funcion findByUsername esta siendo llamada con los argumentos de usernameArgs","range":[86,165]},{"type":{"label":")"},"range":[165,166]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'Funcion findByUsername esta siendo llamada con los argumentos de usernameArgs');
});
//# sourceMappingURL=/home/sistemas/Documentos/Cursos/NodeJs/platziverse/node_modules/.cache/ava/dfd9c78540d09fd4cc4d3a0441f1b416.js.map